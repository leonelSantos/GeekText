{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, productDetailsReducer, newReviewReducer } from './reducers/productReducers';\nimport { authReducer, userReducer } from './reducers/userReducers';\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  auth: authReducer,\n  user: userReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  allOrders: allOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  order: orderReducer,\n  newReview: newReviewReducer\n});\nlet initialState = {};\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\nexport default store;","map":{"version":3,"sources":["/Users/retina15/Desktop/GeekText/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","productDetailsReducer","newReviewReducer","authReducer","userReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrdersReducer","orderReducer","reducer","products","productDetails","auth","user","newOrder","myOrders","allOrders","orderDetails","order","newReview","initialState","middlware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,eAAT,EAA0BC,qBAA1B,EAAiDC,gBAAjD,QAAyE,4BAAzE;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,yBAAxC;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,mBAA3C,EAAgEC,gBAAhE,EAAkFC,YAAlF,QAAsG,0BAAtG;AAEA,MAAMC,OAAO,GAAEd,eAAe,CAAC;AAC3Be,EAAAA,QAAQ,EAAEX,eADiB;AAE3BY,EAAAA,cAAc,EAAEX,qBAFW;AAG3BY,EAAAA,IAAI,EAAEV,WAHqB;AAI3BW,EAAAA,IAAI,EAAEV,WAJqB;AAK3BW,EAAAA,QAAQ,EAAEV,eALiB;AAM3BW,EAAAA,QAAQ,EAAEV,eANiB;AAO3BW,EAAAA,SAAS,EAAET,gBAPgB;AAQ3BU,EAAAA,YAAY,EAAEX,mBARa;AAS3BY,EAAAA,KAAK,EAAEV,YAToB;AAU3BW,EAAAA,SAAS,EAAElB;AAVgB,CAAD,CAA9B;AAcA,IAAImB,YAAY,GAAG,EAAnB;AAEA,MAAMC,SAAS,GAAG,CAACxB,KAAD,CAAlB;AACA,MAAMyB,KAAK,GAAG5B,WAAW,CAACe,OAAD,EAAUW,YAAV,EAAwBtB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,SAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, productDetailsReducer, newReviewReducer } from './reducers/productReducers'\r\nimport { authReducer,userReducer } from './reducers/userReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer =combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n   \r\n})\r\n\r\nlet initialState = {}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}