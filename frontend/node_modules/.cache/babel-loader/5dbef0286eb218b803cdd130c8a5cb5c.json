{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, NEW_REVIEW_RESET } from '../constants/productConstants';\nexport const getProducts = (keyword = '', currentPage = 1, price, genre, rating = 0, topSeller) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n    if (genre) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&genre=${genre}&ratings[gte]=${rating}`;\n    }\n\n    if (topSeller) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}&topSeller=${topSeller}`;\n    }\n\n    if (topSeller && genre) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}&topSeller=${topSeller}&genre=${genre}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/retina15/Desktop/GeekText/frontend/src/actions/productActions.js"],"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","NEW_REVIEW_RESET","getProducts","keyword","currentPage","price","genre","rating","topSeller","dispatch","type","link","data","get","payload","error","response","message","getProductDetails","id","product","newReview","reviewData","config","headers","put","success","clearErrors"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport { \r\n    ALL_PRODUCTS_REQUEST, \r\n    ALL_PRODUCTS_SUCCESS, \r\n    ALL_PRODUCTS_FAIL,\r\n    CLEAR_ERRORS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    NEW_REVIEW_RESET \r\n} from '../constants/productConstants'\r\n    \r\nexport const getProducts = (keyword='', currentPage = 1,price, genre, rating = 0, topSeller) => async (dispatch) => {\r\n    try {\r\n    \r\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\r\n    \r\n            let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n    \r\n            if(genre) {\r\n                link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&genre=${genre}&ratings[gte]=${rating}`\r\n            }\r\n    \r\n            if(topSeller){\r\n                link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}&topSeller=${topSeller}`\r\n            }\r\n    \r\n            if(topSeller && genre) {\r\n                link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}&topSeller=${topSeller}&genre=${genre}`\r\n            }\r\n     const{data} = await axios.get(link);\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n     } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n    \r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n    \r\n        \r\n        const { data } = await axios.get(`/api/v1/product/${id}`)\r\n    \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        })\r\n    \r\n     } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n    // Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}    "]},"metadata":{},"sourceType":"module"}