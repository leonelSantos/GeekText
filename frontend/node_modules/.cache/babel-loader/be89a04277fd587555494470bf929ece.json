{"ast":null,"code":"var _jsxFileName = \"/Users/retina15/Desktop/GeekText/frontend/src/components/user/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from '../layout/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = ({\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [nickName, setNickName] = useState('');\n  const [ID, setID] = useState('');\n  const [email, setEmail] = useState('');\n  const [number, setNumber] = useState('');\n  const [expDate, setExpdate] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [streetAddress, setStreetAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    setName(user.name);\n    setNickName(user.nickName);\n    setID(user.ID);\n    setEmail(user.email);\n\n    if (user && user.creditCard != undefined && user.shippingAddress != undefined) {\n      setNumber(user.creditCard.number);\n      setExpdate(user.creditCard.expDate);\n      setCvv(user.creditCard.cvv);\n      setStreetAddress(user.shippingAddress.streetAddress);\n      setCity(user.shippingAddress.city);\n      setZipCode(user.shippingAddress.zipCode);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n      history.push('/me');\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let creditCard = {\n      'number': number,\n      'expDate': expDate,\n      'cvv': cvv\n    };\n    let shippingAddress = {\n      'streetAddress': streetAddress,\n      'city': city,\n      'zipCode': zipCode\n    };\n    dispatch(updateProfile(name, nickName, ID, email, creditCard, shippingAddress));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Update Profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mt-2 mb-5\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name_field\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"name\",\n              id: \"name_field\",\n              className: \"form-control\",\n              name: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nickName_field\",\n              children: \"Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"nickName\",\n              id: \"nickName_field\",\n              className: \"form-control\",\n              name: \"nickName\",\n              value: nickName,\n              onChange: e => setNickName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ID_field\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"ID\",\n              id: \"ID_field\",\n              className: \"form-control\",\n              name: \"ID\",\n              value: ID,\n              onChange: e => setID(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Email_field\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Email\",\n              id: \"Email_field\",\n              className: \"form-control\",\n              name: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CreditNumber_field\",\n              children: \"CreditCard Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"CreditNumber\",\n              id: \"CreditNumber_field\",\n              className: \"form-control\",\n              name: \"CreditNumber\",\n              value: number,\n              onChange: e => setNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CreditDate_field\",\n              children: \"Expiration Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"CreditDate\",\n              id: \"CreditDate_field\",\n              className: \"form-control\",\n              name: \"CreditDate\",\n              value: expDate,\n              onChange: e => setExpdate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Creditcvv_field\",\n                children: \"CVV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"Creditcvv\",\n                id: \"Creditcvv_field\",\n                className: \"form-control\",\n                name: \"Creditcvv\",\n                value: cvv,\n                onChange: e => setCvv(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"StreetAddress_field\",\n                children: \"Street Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"StreetAddress\",\n                id: \"StreetAddress_field\",\n                className: \"form-control\",\n                name: \"StreetAddress\",\n                value: streetAddress,\n                onChange: e => setStreetAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"City_field\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"City\",\n                id: \"City_field\",\n                className: \"form-control\",\n                name: \"City\",\n                value: city,\n                onChange: e => setCity(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ZipCode_field\",\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"ZipCode\",\n                id: \"ZipCode_field\",\n                className: \"form-control\",\n                name: \"ZipCode\",\n                value: zipCode,\n                onChange: e => setZipCode(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn update-btn btn-block mt-4 mb-3\",\n            disabled: loading ? true : false,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProfile, \"40TnCEMfNp9UVL0+PKCC4/CvmM8=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/retina15/Desktop/GeekText/frontend/src/components/user/UpdateProfile.js"],"names":["React","Fragment","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","updateProfile","loadUser","clearErrors","UPDATE_PROFILE_RESET","UpdateProfile","history","name","setName","nickName","setNickName","ID","setID","email","setEmail","number","setNumber","expDate","setExpdate","cvv","setCvv","streetAddress","setStreetAddress","city","setCity","zipCode","setZipCode","alert","dispatch","user","state","auth","error","isUpdated","loading","creditCard","undefined","shippingAddress","success","push","type","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAqD,2BAArD;AACA,SAASC,oBAAT,QAAqC,+BAArC;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAEnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,EAAD,EAAKC,KAAL,IAAcjB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,GAAD,EAAMC,MAAN,IAAgBzB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMgC,KAAK,GAAG7B,QAAQ,EAAtB;AACA,QAAM8B,QAAQ,GAAG7B,WAAW,EAA5B;AAEA,QAAM;AAAE8B,IAAAA;AAAF,MAAW7B,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAgClC,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAjD;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACqB,IAAI,CAACtB,IAAN,CAAP;AACAG,IAAAA,WAAW,CAACmB,IAAI,CAACpB,QAAN,CAAX;AACAG,IAAAA,KAAK,CAACiB,IAAI,CAAClB,EAAN,CAAL;AACAG,IAAAA,QAAQ,CAACe,IAAI,CAAChB,KAAN,CAAR;;AACA,QAAIgB,IAAI,IAAIA,IAAI,CAACM,UAAL,IAAmBC,SAA3B,IAAwCP,IAAI,CAACQ,eAAL,IAAwBD,SAApE,EAA+E;AAC3EpB,MAAAA,SAAS,CAACa,IAAI,CAACM,UAAL,CAAgBpB,MAAjB,CAAT;AACAG,MAAAA,UAAU,CAACW,IAAI,CAACM,UAAL,CAAgBlB,OAAjB,CAAV;AACAG,MAAAA,MAAM,CAACS,IAAI,CAACM,UAAL,CAAgBhB,GAAjB,CAAN;AACAG,MAAAA,gBAAgB,CAACO,IAAI,CAACQ,eAAL,CAAqBhB,aAAtB,CAAhB;AACAG,MAAAA,OAAO,CAACK,IAAI,CAACQ,eAAL,CAAqBd,IAAtB,CAAP;AACAG,MAAAA,UAAU,CAACG,IAAI,CAACQ,eAAL,CAAqBZ,OAAtB,CAAV;AACH;;AAED,QAAIO,KAAJ,EAAW;AACPL,MAAAA,KAAK,CAACK,KAAN,CAAYA,KAAZ;AACAJ,MAAAA,QAAQ,CAACzB,WAAW,EAAZ,CAAR;AACH;;AAED,QAAI8B,SAAJ,EAAe;AACXN,MAAAA,KAAK,CAACW,OAAN,CAAc,2BAAd;AACAV,MAAAA,QAAQ,CAAC1B,QAAQ,EAAT,CAAR;AAEAI,MAAAA,OAAO,CAACiC,IAAR,CAAa,KAAb;AAEAX,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAEpC;AADD,OAAD,CAAR;AAGH;AAEJ,GA9BQ,EA8BN,CAACwB,QAAD,EAAWD,KAAX,EAAkBK,KAAlB,EAAyB1B,OAAzB,EAAkC2B,SAAlC,CA9BM,CAAT;;AAgCA,QAAMQ,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIR,UAAU,GAAG;AACb,gBAAUpB,MADG;AAEb,iBAAWE,OAFE;AAGb,aAAOE;AAHM,KAAjB;AAMA,QAAIkB,eAAe,GAAG;AAClB,uBAAiBhB,aADC;AAElB,cAAQE,IAFU;AAGlB,iBAAWE;AAHO,KAAtB;AAMAG,IAAAA,QAAQ,CAAC3B,aAAa,CAACM,IAAD,EAAOE,QAAP,EAAiBE,EAAjB,EAAqBE,KAArB,EAA4BsB,UAA5B,EAAwCE,eAAxC,CAAd,CAAR;AACH,GAhBD;;AAkBA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,QAAQ,EAAEI,aAAtC;AAAqD,UAAA,OAAO,EAAC,qBAA7D;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,EAAE,EAAC,YAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,KAAK,EAAElC,IALX;AAMI,cAAA,QAAQ,EAAGmC,CAAD,IAAOlC,OAAO,CAACkC,CAAC,CAACE,MAAF,CAASC,KAAV;AAN5B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAeI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,EAAE,EAAC,gBAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,UAJT;AAKI,cAAA,KAAK,EAAEpC,QALX;AAMI,cAAA,QAAQ,EAAGiC,CAAD,IAAOhC,WAAW,CAACgC,CAAC,CAACE,MAAF,CAASC,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eA2BI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,IADT;AAEI,cAAA,EAAE,EAAC,UAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,IAJT;AAKI,cAAA,KAAK,EAAElC,EALX;AAMI,cAAA,QAAQ,EAAG+B,CAAD,IAAO9B,KAAK,CAAC8B,CAAC,CAACE,MAAF,CAASC,KAAV;AAN1B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ,eAuCI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,EAAE,EAAC,aAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,OAJT;AAKI,cAAA,KAAK,EAAEhC,KALX;AAMI,cAAA,QAAQ,EAAG6B,CAAD,IAAO5B,QAAQ,CAAC4B,CAAC,CAACE,MAAF,CAASC,KAAV;AAN7B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCJ,eAmDI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,cADT;AAEI,cAAA,EAAE,EAAC,oBAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,cAJT;AAKI,cAAA,KAAK,EAAE9B,MALX;AAMI,cAAA,QAAQ,EAAG2B,CAAD,IAAO1B,SAAS,CAAC0B,CAAC,CAACE,MAAF,CAASC,KAAV;AAN9B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnDJ,eA8DQ;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACA;AAAO,cAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AACI,cAAA,IAAI,EAAC,YADT;AAEI,cAAA,EAAE,EAAC,kBAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,YAJT;AAKI,cAAA,KAAK,EAAE5B,OALX;AAMI,cAAA,QAAQ,EAAGyB,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV;AAN/B;AAAA;AAAA;AAAA;AAAA,oBAFA,eAYA;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACA;AAAO,gBAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AACI,gBAAA,IAAI,EAAC,WADT;AAEI,gBAAA,EAAE,EAAC,iBAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,IAAI,EAAC,WAJT;AAKI,gBAAA,KAAK,EAAE1B,GALX;AAMI,gBAAA,QAAQ,EAAGuB,CAAD,IAAOtB,MAAM,CAACsB,CAAC,CAACE,MAAF,CAASC,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZA,eAwBA;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACA;AAAO,gBAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AACI,gBAAA,IAAI,EAAC,eADT;AAEI,gBAAA,EAAE,EAAC,qBAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,IAAI,EAAC,eAJT;AAKI,gBAAA,KAAK,EAAExB,aALX;AAMI,gBAAA,QAAQ,EAAGqB,CAAD,IAAOpB,gBAAgB,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV;AANrC;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBA,eAmCA;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACA;AAAO,gBAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,YAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,IAAI,EAAC,MAJT;AAKI,gBAAA,KAAK,EAAEtB,IALX;AAMI,gBAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV;AAN5B;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnCA,eA8CA;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACA;AAAO,gBAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AACI,gBAAA,IAAI,EAAC,SADT;AAEI,gBAAA,EAAE,EAAC,eAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,IAAI,EAAC,SAJT;AAKI,gBAAA,KAAK,EAAEpB,OALX;AAMI,gBAAA,QAAQ,EAAGiB,CAAD,IAAOhB,UAAU,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV;AAN/B;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9DR,eA4HI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,oCAAhC;AAAqE,YAAA,QAAQ,EAAEX,OAAO,GAAG,IAAH,GAAU,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwIH,CA3MD;;GAAM7B,a;UAYYP,Q,EACGC,W,EAEAC,W,EACqBA,W;;;KAhBpCK,a;AA6MN,eAAeA,aAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n    \r\n    const [name, setName] = useState('')\r\n    const [nickName, setNickName] = useState('')\r\n    const [ID, setID] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [expDate, setExpdate] = useState('')\r\n    const [cvv, setCvv] = useState('')\r\n    const [streetAddress, setStreetAddress] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        setName(user.name);\r\n        setNickName(user.nickName);\r\n        setID(user.ID);\r\n        setEmail(user.email);\r\n        if (user && user.creditCard != undefined && user.shippingAddress != undefined) {\r\n            setNumber(user.creditCard.number);\r\n            setExpdate(user.creditCard.expDate);\r\n            setCvv(user.creditCard.cvv);\r\n            setStreetAddress(user.shippingAddress.streetAddress)\r\n            setCity(user.shippingAddress.city)\r\n            setZipCode(user.shippingAddress.zipCode)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let creditCard = { \r\n            'number': number,\r\n            'expDate': expDate,\r\n            'cvv': cvv\r\n        }\r\n\r\n        let shippingAddress = {\r\n            'streetAddress': streetAddress,\r\n            'city': city,\r\n            'zipCode': zipCode\r\n        }\r\n\r\n        dispatch(updateProfile(name, nickName, ID, email, creditCard, shippingAddress))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nickName_field\">Nickname</label>\r\n                            <input\r\n                                type=\"nickName\"\r\n                                id=\"nickName_field\"\r\n                                className=\"form-control\"\r\n                                name='nickName'\r\n                                value={nickName}\r\n                                onChange={(e) => setNickName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ID_field\">ID</label>\r\n                            <input\r\n                                type=\"ID\"\r\n                                id=\"ID_field\"\r\n                                className=\"form-control\"\r\n                                name='ID'\r\n                                value={ID}\r\n                                onChange={(e) => setID(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Email_field\">Email</label>\r\n                            <input\r\n                                type=\"Email\"\r\n                                id=\"Email_field\"\r\n                                className=\"form-control\"\r\n                                name='Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\"> \r\n                            <label htmlFor=\"CreditNumber_field\">CreditCard Number</label>\r\n                            <input\r\n                                type=\"CreditNumber\"\r\n                                id=\"CreditNumber_field\"\r\n                                className=\"form-control\"\r\n                                name='CreditNumber'\r\n                                value={number}\r\n                                onChange={(e) => setNumber(e.target.value)}\r\n                            />\r\n                            </div>\r\n                            <div className=\"form-group\"> \r\n                            <label htmlFor=\"CreditDate_field\">Expiration Date</label>\r\n                            <input\r\n                                type=\"CreditDate\"\r\n                                id=\"CreditDate_field\"\r\n                                className=\"form-control\"\r\n                                name='CreditDate'\r\n                                value={expDate}\r\n                                onChange={(e) => setExpdate(e.target.value)}\r\n                            />\r\n\r\n                            \r\n                            <div className=\"form-group\"> \r\n                            <label htmlFor=\"Creditcvv_field\">CVV</label>\r\n                            <input\r\n                                type=\"Creditcvv\"\r\n                                id=\"Creditcvv_field\"\r\n                                className=\"form-control\"\r\n                                name='Creditcvv'\r\n                                value={cvv}\r\n                                onChange={(e) => setCvv(e.target.value)}\r\n                            />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\"> \r\n                            <label htmlFor=\"StreetAddress_field\">Street Address</label>\r\n                            <input\r\n                                type=\"StreetAddress\"\r\n                                id=\"StreetAddress_field\"\r\n                                className=\"form-control\"\r\n                                name='StreetAddress'\r\n                                value={streetAddress}\r\n                                onChange={(e) => setStreetAddress(e.target.value)}\r\n                            />\r\n                            </div>\r\n                            <div className=\"form-group\"> \r\n                            <label htmlFor=\"City_field\">City</label>\r\n                            <input\r\n                                type=\"City\"\r\n                                id=\"City_field\"\r\n                                className=\"form-control\"\r\n                                name='City'\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                            />\r\n                            </div>\r\n                            <div className=\"form-group\"> \r\n                            <label htmlFor=\"ZipCode_field\">Zip Code</label>\r\n                            <input\r\n                                type=\"ZipCode\"\r\n                                id=\"ZipCode_field\"\r\n                                className=\"form-control\"\r\n                                name='ZipCode'\r\n                                value={zipCode}\r\n                                onChange={(e) => setZipCode(e.target.value)}\r\n                            />\r\n                            </div>\r\n\r\n                            </div>\r\n                            \r\n                            \r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n"]},"metadata":{},"sourceType":"module"}